{"ast":null,"code":"var _jsxFileName = \"D:\\\\myprojects\\\\uiclone-discord\\\\website\\\\src\\\\components\\\\ChannelMessage\\\\index.tsx\";\nimport React from 'react';\nimport { Container, Avatar, Message, MessageHeader, MessageContent } from './styles';\nexport { Mention } from './styles';\n\nconst ChannelMessage = ({\n  author,\n  date,\n  content,\n  isMention,\n  isBot\n}) => {\n  return /*#__PURE__*/React.createElement(Container, {\n    className: isMention ? 'mention' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: isBot ? 'bot' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MessageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, author), isBot && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 31\n    }\n  }, \"Bot\"), /*#__PURE__*/React.createElement(\"time\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, date)), /*#__PURE__*/React.createElement(MessageContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, content)));\n};\n\nexport default ChannelMessage;","map":{"version":3,"sources":["D:/myprojects/uiclone-discord/website/src/components/ChannelMessage/index.tsx"],"names":["React","Container","Avatar","Message","MessageHeader","MessageContent","Mention","ChannelMessage","author","date","content","isMention","isBot"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,OAA5B,EAAqCC,aAArC,EAAoDC,cAApD,QAA0E,UAA1E;AACA,SAASC,OAAT,QAAwB,UAAxB;;AAUA,MAAMC,cAA+B,GAAG,CAAC;AACrCC,EAAAA,MADqC;AAErCC,EAAAA,IAFqC;AAGrCC,EAAAA,OAHqC;AAIrCC,EAAAA,SAJqC;AAKrCC,EAAAA;AALqC,CAAD,KAMlC;AACF,sBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAED,SAAS,GAAG,SAAH,GAAe,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEC,KAAK,GAAG,KAAH,GAAW,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASJ,MAAT,CADJ,EAGKI,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHd,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,IAAP,CALJ,CADJ,eAQI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OADL,CARJ,CAHJ,CADJ;AAkBH,CAzBD;;AA2BA,eAAeH,cAAf","sourcesContent":["import React from 'react'\r\n\r\nimport { Container, Avatar, Message, MessageHeader, MessageContent } from './styles'\r\nexport { Mention } from './styles'\r\n\r\nexport interface Props {\r\n    author: string\r\n    date: string\r\n    content: string | React.ReactElement | React.ReactNode\r\n    isMention?: boolean\r\n    isBot?: boolean\r\n}\r\n\r\nconst ChannelMessage: React.FC<Props> = ({\r\n    author,\r\n    date,\r\n    content,\r\n    isMention,\r\n    isBot\r\n}) => {\r\n    return (\r\n        <Container className={isMention ? 'mention' : ''}>\r\n            <Avatar className={isBot ? 'bot' : ''}/>\r\n\r\n            <Message>\r\n                <MessageHeader>\r\n                    <strong>{author}</strong>\r\n\r\n                    {isBot && <span>Bot</span>}\r\n\r\n                    <time>{date}</time>\r\n                </MessageHeader>\r\n                <MessageContent>\r\n                    {content}\r\n                </MessageContent>\r\n            </Message>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChannelMessage"]},"metadata":{},"sourceType":"module"}