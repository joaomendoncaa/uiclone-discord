{"ast":null,"code":"import React,{useRef,useEffect}from'react';import ChannelMessage,{Mention}from'../ChannelMessage';import{Container,MessageList,MessageInputWrapper,MessageInput,MessageInputIcon}from'./styles';var ChannelData=function ChannelData(){var messagesRef=useRef();useEffect(function(){var div=messagesRef.current;if(div){div.scrollTop=div.scrollHeight;}},[messagesRef]);return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(MessageList,{ref:messagesRef},Array.from(Array(15).keys()).map(function(n){return/*#__PURE__*/React.createElement(ChannelMessage,{key:n,author:\"insanity\",date:\"2020/08/24\",content:\"have you seen all the UI clones I made?\"});}),/*#__PURE__*/React.createElement(ChannelMessage,{author:\"Bot1[PH]\",date:\"2020/08/25\",content:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Mention,null,\"@insanity\"),\" did you check all my work regarding back-end? Remember to check it out! \\uD83D\\uDE00\"),isMention:true,isBot:true})),/*#__PURE__*/React.createElement(MessageInputWrapper,null,/*#__PURE__*/React.createElement(MessageInput,{type:\"text\",placeholder:\"Message #chat-geral\"}),/*#__PURE__*/React.createElement(MessageInputIcon,null)));};export default ChannelData;","map":{"version":3,"sources":["D:/myprojects/uiclone-discord/website/src/components/ChannelData/index.tsx"],"names":["React","useRef","useEffect","ChannelMessage","Mention","Container","MessageList","MessageInputWrapper","MessageInput","MessageInputIcon","ChannelData","messagesRef","div","current","scrollTop","scrollHeight","Array","from","keys","map","n"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,KAAyC,OAAzC,CAEA,MAAOC,CAAAA,cAAP,EAAyBC,OAAzB,KAAwC,mBAAxC,CAEA,OAASC,SAAT,CAAoBC,WAApB,CAAiCC,mBAAjC,CAAsDC,YAAtD,CAAoEC,gBAApE,KAA4F,UAA5F,CAEA,GAAMC,CAAAA,WAAqB,CAAG,QAAxBA,CAAAA,WAAwB,EAAM,CAChC,GAAMC,CAAAA,WAAW,CAAGV,MAAM,EAA1B,CAEAC,SAAS,CAAC,UAAM,CACZ,GAAMU,CAAAA,GAAG,CAAGD,WAAW,CAACE,OAAxB,CAEA,GAAID,GAAJ,CAAS,CACLA,GAAG,CAACE,SAAJ,CAAgBF,GAAG,CAACG,YAApB,CACH,CACJ,CANQ,CAMN,CAACJ,WAAD,CANM,CAAT,CAQA,mBACI,oBAAC,SAAD,mBAEI,oBAAC,WAAD,EAAa,GAAG,CAAEA,WAAlB,EACKK,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,EAA6BC,GAA7B,CAAiC,SAACC,CAAD,qBAC9B,oBAAC,cAAD,EACI,GAAG,CAAEA,CADT,CAEI,MAAM,CAAC,UAFX,CAGI,IAAI,CAAC,YAHT,CAII,OAAO,CAAC,yCAJZ,EAD8B,EAAjC,CADL,cAUI,oBAAC,cAAD,EACI,MAAM,CAAC,UADX,CAEI,IAAI,CAAC,YAFT,CAGI,OAAO,cACH,qDACI,oBAAC,OAAD,kBADJ,yFAJR,CAQI,SAAS,KARb,CASI,KAAK,KATT,EAVJ,CAFJ,cAyBI,oBAAC,mBAAD,mBACI,oBAAC,YAAD,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,qBAAtC,EADJ,cAEI,oBAAC,gBAAD,MAFJ,CAzBJ,CADJ,CAiCH,CA5CD,CA8CA,cAAeV,CAAAA,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nimport ChannelMessage, { Mention } from '../ChannelMessage'\r\n\r\nimport { Container, MessageList, MessageInputWrapper, MessageInput, MessageInputIcon } from './styles'\r\n\r\nconst ChannelData: React.FC = () => {\r\n    const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>\r\n\r\n    useEffect(() => {\r\n        const div = messagesRef.current\r\n\r\n        if (div) {\r\n            div.scrollTop = div.scrollHeight\r\n        }\r\n    }, [messagesRef])\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <MessageList ref={messagesRef}>\r\n                {Array.from(Array(15).keys()).map((n) => (\r\n                    <ChannelMessage \r\n                        key={n}                  \r\n                        author=\"insanity\"\r\n                        date=\"2020/08/24\"\r\n                        content=\"have you seen all the UI clones I made?\"\r\n                    />\r\n                ))}\r\n                    \r\n                <ChannelMessage                   \r\n                    author=\"Bot1[PH]\"\r\n                    date=\"2020/08/25\"\r\n                    content={\r\n                        <>\r\n                            <Mention>@insanity</Mention> did you check all my work regarding back-end? Remember to check it out! ðŸ˜€\r\n                        </>\r\n                    }\r\n                    isMention\r\n                    isBot\r\n                />\r\n            </MessageList>\r\n\r\n            <MessageInputWrapper>\r\n                <MessageInput type=\"text\" placeholder=\"Message #chat-geral\" />\r\n                <MessageInputIcon />\r\n            </MessageInputWrapper>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChannelData"]},"metadata":{},"sourceType":"module"}